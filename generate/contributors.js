const prompt = require("prompt-sync")({ sigint: false });
const fs = require("fs");

line1 = "> WARNING: This file is auto-generated. Do not edit this file manually.";

let contributors = [];
done = false;
while (!done) {
    let name = "";
    let email = "";
    let github = "";
    let discord = "";
    let other = {};

    console.log("Enter a name (e.g. John Doe), press enter to continue, or press ctrl+c to quit.");
    name = prompt("Name: ");
    if (name == null) {
        console.log("Aborting.")
        process.exit(0);
    }
    if (name == "") {
        console.log("Continuing.");
        done = true;
        continue;
    }

    console.log("Enter a primary email address (e.g. johndoe@example.com), or press enter to use default.");
    email = prompt("Email [none]: ");
    if (email == null) {
        console.log("Returning.");
        continue;
    }

    console.log("Enter a GitHub username (e.g. JohnDoe), or press enter to use default.");
    github = prompt("GitHub [none]: ");
    if (github == null) {
        console.log("Returning.");
        continue;
    }

    console.log("Enter a Discord username (e.g. johndoe#1234 or johndoe), or press enter to use default.");
    discord = prompt("Discord [none]: ");
    if (discord == null) {
        console.log("Returning.");
        continue;
    }

    let reset = false;
    other = {};
    while (true) {
        other = {};
        let other_raw = "";
        console.log("Enter other details using the abbreviation key:value, separated by a comma with no spaces (e.g. key1:value,key2:value)");
        other_raw = prompt("Other [none]: ");
        if (other_raw == null) {
            console.log("Returning.");
            reset = true;
            break;
        }
        if (other_raw == "") {
            console.log("Continuing.");
            break;
        }

        other_key_split = other_raw.split(",");
        if (other_key_split.length == 0) {
            break;
        }
        retry = false;
        for (let i = 0; i < other_key_split.length; i++) {
            cont = true;
            other_value_split = other_key_split[i].split(":");
            if (other_value_split.length != 2) {
                console.log("Invalid key:value pair. Please fix, then reenter the data.");
                retry = true;
            }
            other[other_value_split[0]] = other_value_split[1];
            if (retry) {
                break;
            }
        }
        if (retry) {
            continue;
        }
        break;
    }
    if (reset) {
        continue;
    }
    
    contributors.push({
        "name": name,
        "email": email,
        "github": github,
        "discord": discord,
        "other": other
    });
}

console.log(contributors);
let confirm = prompt("Is This Data OK? y/n [y]: ").toLowerCase();
if (!(confirm == 'y' || confirm == '')) {
    console.log("Aborting.");
    process.exit(0);
}

let output = "";
output += line1 + "\n";
output += "# Contributors\n";
for (contributor in contributors) {
    output += `### ${contributors[contributor].name}\n`;
    output += `> Email: ${contributors[contributor].email}\n`;
    output += `> GitHub: ${contributors[contributor].github}\n`;
    output += `> Discord: ${contributors[contributor].discord}\n`;
    for (other_key in contributors[contributor].other) {
        output += `> ${other_key}: ${contributors[contributor].other[other_key]}\n`;
    }
}

fs.writeFile("../CONTRIBUTORS.md", output, (err) => {
    if (!err) return;
    console.error(`Could not write to file: ${err}`);
});
console.log("Done.");
